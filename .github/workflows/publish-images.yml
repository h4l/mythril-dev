name: "Publish Mythril Container Images for linux/amd64 and linux/arm64"
on:
  push:
    branches: main
    paths:
      - "docker/*"

env:
  REGISTRY: ghcr.io
  TAG_PREFIX: ghcr.io/${{ github.repository }}

jobs:
  build-publish:
    name: Build, Publish & Sign
    runs-on: ubuntu-latest
    permissions:
      packages: write
      # Required for Cosign to create ephemeral credentials from the runner's
      # GitHub OIDC Token.
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@dd6b2e2b610a11fd73dd187a43d57cc1394e35f9

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@16c0bc4a6e6ada2cfd8afd41d22d95379cf7c32a

      - name: Extract Locked Dependency Version Variables
        uses: docker/bake-action@v3
        with:
          workdir: ./docker
          files: docker-bake.hcl
          targets: locked-versions
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

      - name: Build, Test and Push
        id: bake
        uses: docker/bake-action@ad0d2a9712378c502a7d5c590deb0d7a02d2a61d
        with:
          workdir: ./docker
          files: docker-bake.hcl,locked-versions/docker-bake.versions.json,base-images.lock
          provenance: true
          sbom: true
          push: true

      - name: Sign Container Images with Sigstore Cosign
        env:
          BAKE_META: ${{ steps.bake.outputs.metadata }}
        run: |
          set -xeuo pipefail
          # Use a loop rather than xargs so that -x can show what's happening
          readarray -t image_digests <<<"$(
            jq <<<"$BAKE_META" -r '
              .[]
              | select(.["image.name"]? and .["containerimage.digest"]?)
              # Each target can have multiple tags pointing to the same digest. We only
              # need to sign the digest once, not for each tag.
              | (.["image.name"] | split(",") | first | split(":") | first) as $name
              | "\($name)@\(.["containerimage.digest"])"
            '
          )"
          for image_digest in "${image_digests[@]}"; do
            cosign sign --yes --recursive "${image_digest:?}"
          done
